# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .devices_list_device_providers_response_device_providers_item_provider_categories_item import (
    DevicesListDeviceProvidersResponseDeviceProvidersItemProviderCategoriesItem,
)


class DevicesListDeviceProvidersResponseDeviceProvidersItem(pydantic.BaseModel):
    device_provider_name: str
    display_name: str
    image_url: str
    provider_categories: typing.List[DevicesListDeviceProvidersResponseDeviceProvidersItemProviderCategoriesItem]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
