# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DevicesListRequestDeviceType(str, enum.Enum):
    AKUVOX_LOCK = "akuvox_lock"
    AUGUST_LOCK = "august_lock"
    BRIVO_ACCESS_POINT = "brivo_access_point"
    BUTTERFLYMX_PANEL = "butterflymx_panel"
    DOORKING_LOCK = "doorking_lock"
    GENIE_DOOR = "genie_door"
    IGLOO_LOCK = "igloo_lock"
    LINEAR_LOCK = "linear_lock"
    LOCKLY_LOCK = "lockly_lock"
    KWIKSET_LOCK = "kwikset_lock"
    NUKI_LOCK = "nuki_lock"
    SALTO_LOCK = "salto_lock"
    SCHLAGE_LOCK = "schlage_lock"
    SEAM_RELAY = "seam_relay"
    SMARTTHINGS_LOCK = "smartthings_lock"
    YALE_LOCK = "yale_lock"
    TWO_N_INTERCOM = "two_n_intercom"
    CONTROLBYWEB_DEVICE = "controlbyweb_device"
    TTLOCK_LOCK = "ttlock_lock"
    IGLOOHOME_LOCK = "igloohome_lock"
    HUBITAT_LOCK = "hubitat_lock"
    NOISEAWARE_ACTIVITY_ZONE = "noiseaware_activity_zone"
    MINUT_SENSOR = "minut_sensor"
    ECOBEE_THERMOSTAT = "ecobee_thermostat"
    NEST_THERMOSTAT = "nest_thermostat"

    def visit(
        self,
        akuvox_lock: typing.Callable[[], T_Result],
        august_lock: typing.Callable[[], T_Result],
        brivo_access_point: typing.Callable[[], T_Result],
        butterflymx_panel: typing.Callable[[], T_Result],
        doorking_lock: typing.Callable[[], T_Result],
        genie_door: typing.Callable[[], T_Result],
        igloo_lock: typing.Callable[[], T_Result],
        linear_lock: typing.Callable[[], T_Result],
        lockly_lock: typing.Callable[[], T_Result],
        kwikset_lock: typing.Callable[[], T_Result],
        nuki_lock: typing.Callable[[], T_Result],
        salto_lock: typing.Callable[[], T_Result],
        schlage_lock: typing.Callable[[], T_Result],
        seam_relay: typing.Callable[[], T_Result],
        smartthings_lock: typing.Callable[[], T_Result],
        yale_lock: typing.Callable[[], T_Result],
        two_n_intercom: typing.Callable[[], T_Result],
        controlbyweb_device: typing.Callable[[], T_Result],
        ttlock_lock: typing.Callable[[], T_Result],
        igloohome_lock: typing.Callable[[], T_Result],
        hubitat_lock: typing.Callable[[], T_Result],
        noiseaware_activity_zone: typing.Callable[[], T_Result],
        minut_sensor: typing.Callable[[], T_Result],
        ecobee_thermostat: typing.Callable[[], T_Result],
        nest_thermostat: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DevicesListRequestDeviceType.AKUVOX_LOCK:
            return akuvox_lock()
        if self is DevicesListRequestDeviceType.AUGUST_LOCK:
            return august_lock()
        if self is DevicesListRequestDeviceType.BRIVO_ACCESS_POINT:
            return brivo_access_point()
        if self is DevicesListRequestDeviceType.BUTTERFLYMX_PANEL:
            return butterflymx_panel()
        if self is DevicesListRequestDeviceType.DOORKING_LOCK:
            return doorking_lock()
        if self is DevicesListRequestDeviceType.GENIE_DOOR:
            return genie_door()
        if self is DevicesListRequestDeviceType.IGLOO_LOCK:
            return igloo_lock()
        if self is DevicesListRequestDeviceType.LINEAR_LOCK:
            return linear_lock()
        if self is DevicesListRequestDeviceType.LOCKLY_LOCK:
            return lockly_lock()
        if self is DevicesListRequestDeviceType.KWIKSET_LOCK:
            return kwikset_lock()
        if self is DevicesListRequestDeviceType.NUKI_LOCK:
            return nuki_lock()
        if self is DevicesListRequestDeviceType.SALTO_LOCK:
            return salto_lock()
        if self is DevicesListRequestDeviceType.SCHLAGE_LOCK:
            return schlage_lock()
        if self is DevicesListRequestDeviceType.SEAM_RELAY:
            return seam_relay()
        if self is DevicesListRequestDeviceType.SMARTTHINGS_LOCK:
            return smartthings_lock()
        if self is DevicesListRequestDeviceType.YALE_LOCK:
            return yale_lock()
        if self is DevicesListRequestDeviceType.TWO_N_INTERCOM:
            return two_n_intercom()
        if self is DevicesListRequestDeviceType.CONTROLBYWEB_DEVICE:
            return controlbyweb_device()
        if self is DevicesListRequestDeviceType.TTLOCK_LOCK:
            return ttlock_lock()
        if self is DevicesListRequestDeviceType.IGLOOHOME_LOCK:
            return igloohome_lock()
        if self is DevicesListRequestDeviceType.HUBITAT_LOCK:
            return hubitat_lock()
        if self is DevicesListRequestDeviceType.NOISEAWARE_ACTIVITY_ZONE:
            return noiseaware_activity_zone()
        if self is DevicesListRequestDeviceType.MINUT_SENSOR:
            return minut_sensor()
        if self is DevicesListRequestDeviceType.ECOBEE_THERMOSTAT:
            return ecobee_thermostat()
        if self is DevicesListRequestDeviceType.NEST_THERMOSTAT:
            return nest_thermostat()
